version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.6.1'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    
  kafka:
    image: 'confluentinc/cp-kafka:7.6.1'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  app-producer:
    image: esakkidev/kafka-producer:v1.0.0
    build:
      context: .
      dockerfile: Producer
    container_name: my_producer_app
    ports:
      - '3000:3000'
    environment:
      KAFKA_BROKER: 'kafka:9092'
      FLASK_ENV: development
    depends_on:
      - kafka
    networks:
      - app-network
    # volumes: #volumes are optional, useful during development
    #   - .:/app  # mount current folder into /app
      # - /app/node_modules # keep container’s node_modules safe

  app-consumer:
    image: esakkidev/kafka-consumer:v1.0.0
    build:
      context: .
      dockerfile: Consumer
    container_name: my_consumer_app
    ports:
      - '4000:4000'
    environment:
      KAFKA_BROKER: 'kafka:9092'
      FLASK_ENV: development
    depends_on:
      - kafka
    networks:
      - app-network
    # volumes:   #volumes are optional, useful during development
    #   - .:/app  # mount current folder into /app
    #   - /app/node_modules # keep container’s node_modules safe